//
// Generated By:JAX-WS RI IBM 2.2.1-11/25/2013 11:48 AM(foreman)- (JAXB RI IBM 2.2.3-11/25/2013 12:35 PM(foreman)-)
//


package pe.bn.com.sate.ope.infrastructure.service.external.domain.interfaz;

import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.Service;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceException;
import javax.xml.ws.WebServiceFeature;

@WebServiceClient(name = "GatewayInterfaceService", targetNamespace = "http://interfaz.service.bn.pe", wsdlLocation = "WEB-INF/wsdl/GatewayInterface.wsdl")
public class GatewayInterfaceService
    extends Service
{

    private final static URL GATEWAYINTERFACESERVICE_WSDL_LOCATION;
    private final static WebServiceException GATEWAYINTERFACESERVICE_EXCEPTION;
    private final static QName GATEWAYINTERFACESERVICE_QNAME = new QName("http://interfaz.service.bn.pe", "GatewayInterfaceService");

    static {
            GATEWAYINTERFACESERVICE_WSDL_LOCATION = pe.bn.com.sate.ope.infrastructure.service.external.domain.interfaz.GatewayInterfaceService.class.getResource("/WEB-INF/wsdl/GatewayInterface.wsdl");
        WebServiceException e = null;
        if (GATEWAYINTERFACESERVICE_WSDL_LOCATION == null) {
            e = new WebServiceException("Cannot find 'WEB-INF/wsdl/GatewayInterface.wsdl' wsdl. Place the resource correctly in the classpath.");
        }
        GATEWAYINTERFACESERVICE_EXCEPTION = e;
    }

    public GatewayInterfaceService() {
        super(__getWsdlLocation(), GATEWAYINTERFACESERVICE_QNAME);
    }

    public GatewayInterfaceService(WebServiceFeature... features) {
        super(__getWsdlLocation(), GATEWAYINTERFACESERVICE_QNAME, features);
    }

    public GatewayInterfaceService(URL wsdlLocation) {
        super(wsdlLocation, GATEWAYINTERFACESERVICE_QNAME);
    }

    public GatewayInterfaceService(URL wsdlLocation, WebServiceFeature... features) {
        super(wsdlLocation, GATEWAYINTERFACESERVICE_QNAME, features);
    }

    public GatewayInterfaceService(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public GatewayInterfaceService(URL wsdlLocation, QName serviceName, WebServiceFeature... features) {
        super(wsdlLocation, serviceName, features);
    }

    /**
     * 
     * @return
     *     returns GatewayInterface
     */
    @WebEndpoint(name = "GatewayInterface")
    public GatewayInterface getGatewayInterface() {
        return super.getPort(new QName("http://interfaz.service.bn.pe", "GatewayInterface"), GatewayInterface.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns GatewayInterface
     */
    @WebEndpoint(name = "GatewayInterface")
    public GatewayInterface getGatewayInterface(WebServiceFeature... features) {
        return super.getPort(new QName("http://interfaz.service.bn.pe", "GatewayInterface"), GatewayInterface.class, features);
    }

    private static URL __getWsdlLocation() {
        if (GATEWAYINTERFACESERVICE_EXCEPTION!= null) {
            throw GATEWAYINTERFACESERVICE_EXCEPTION;
        }
        return GATEWAYINTERFACESERVICE_WSDL_LOCATION;
    }

}
